<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WorkJournal on Darya Vanichkina</title>
    <link>https://daryavanichkina.com/tags/workjournal/</link>
    <description>Recent content in WorkJournal on Darya Vanichkina</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 28 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://daryavanichkina.com/tags/workjournal/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Installing packages on a PBS-Pro HPC cluster using renv</title>
      <link>https://daryavanichkina.com/posts/2021-07-28-renvhpc/</link>
      <pubDate>Wed, 28 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://daryavanichkina.com/posts/2021-07-28-renvhpc/</guid>
      <description>&lt;h2 id=&#34;using-renv-on-a-pbs-pro-hpc-cluster&#34;&gt;Using renv on a PBS-Pro HPC cluster&lt;/h2&gt;
&lt;p&gt;Today someone asked about my workflow for using R on an HPC cluster, and - more specifically - about how to install packages when executing a workflow that requires use of HPC. Google wasn&amp;rsquo;t helpful with providing a link to share - so the onus is on me to write &lt;em&gt;the&lt;/em&gt; blog post.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://source.unsplash.com/E2qx9Ed2qIQ/800x600&#34; alt=&#34;suitcase&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;the-why&#34;&gt;The &amp;ldquo;why&amp;rdquo;&lt;/h3&gt;
&lt;p&gt;Just like working on our local machines, when working on an HPC cluster we really want to be able to have a consistent R environment for each of our projects that we snapshot at the time of working on said project. This means code that was written months or even years ago will still work as expected, even if the packages on CRAN have since been updated with breaking changes. The &lt;a href=&#34;https://rstudio.github.io/renv/index.html&#34;&gt;&lt;code&gt;renv&lt;/code&gt;&lt;/a&gt; package is brilliant at managing this - however, it is not intuitive to figure out how to use it when working on an HPC cluster - which is what I work through in the below post.&lt;/p&gt;
&lt;h3 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h3&gt;
&lt;p&gt;This post makes a few assumptions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You are planning to use R for analysis, and know how to install packages on your local machine.&lt;/li&gt;
&lt;li&gt;You are working with a PBS-Pro HPC cluster, and know all of the core commands (this is not an introduction to &lt;code&gt;ssh&lt;/code&gt;, &lt;code&gt;qsub&lt;/code&gt;, &lt;code&gt;module load&lt;/code&gt; etc - see &lt;a href=&#34;https://sydney-informatics-hub.github.io/training.artemis.introhpc/&#34;&gt;here&lt;/a&gt; for an intro). I &lt;em&gt;think&lt;/em&gt; some of the below should generalise to SLURM or other cluster schedulers, but don&amp;rsquo;t have access to them so can&amp;rsquo;t test.&lt;/li&gt;
&lt;li&gt;You want to use the &lt;a href=&#34;https://rstudio.github.io/renv/articles/renv.html&#34;&gt;&lt;code&gt;renv&lt;/code&gt;&lt;/a&gt; library to manage the packages in your project (You do, you really do - I cannot recommend this highly enough, especially for sanity of future you). You know the basics of using &lt;code&gt;renv&lt;/code&gt; on your local machine, as per &lt;a href=&#34;https://rstudio.github.io/renv/articles/renv.html&#34;&gt;the &lt;code&gt;renv&lt;/code&gt; vignette&lt;/a&gt; - that&amp;rsquo;s probably the best intro to &lt;code&gt;renv&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Oof, now that that&amp;rsquo;s out of the way, let&amp;rsquo;s dive in üê¨ &amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;step-1-ssh-into-your-cluster-and-fire-up-an-interactive-session&#34;&gt;Step 1: &lt;code&gt;ssh&lt;/code&gt; into your cluster and fire up an interactive session&lt;/h3&gt;
&lt;p&gt;After you login to your HPC server, I recommend starting up an interactive session so you&amp;rsquo;re not working on and hence clogging up the login nodes. (You can do this on a login node too, but depending on how much compute prototyping your analysis requires this may crash üî• - or get you a cranky email from an admin üò° ).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;qsub -I -l walltime&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;4:0:0 -l &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1:ncpus&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1:mem&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;10gb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;step-2-launch-r-and-install-renv&#34;&gt;Step 2: Launch R and install renv&lt;/h3&gt;
&lt;p&gt;After you&amp;rsquo;re logged in to the worker node, run the following commands to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;navigate to the project directory&lt;/li&gt;
&lt;li&gt;get rid of everything that may have inadvertently been preloaded&lt;/li&gt;
&lt;li&gt;launch R&lt;/li&gt;
&lt;li&gt;install &lt;code&gt;renv&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cd myprojectdirectory
module purge
module load R/4.0.4 &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;lt;- or whatver version or R is available on your cluster&lt;/span&gt;
R
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will open the R command line interface.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;install.packages&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;renv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will return the details that the installation of &lt;code&gt;renv()&lt;/code&gt; will occur into a default location:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;Installing package into ‚Äò/home/myusername/R/x86_64-pc-linux-gnu-library/4.0‚Äô
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And ask me to select a CRAN mirror for installation; after choosing the appropriate mirror and pressing return the package will be installed.&lt;/p&gt;
&lt;h3 id=&#34;step-3-install-the-packages-you-need-ideally-prototype-your-analysis-and-snapshot-the-installs-using-renv&#34;&gt;Step 3: Install the packages you need, (ideally) prototype your analysis and snapshot the installs using &lt;code&gt;renv&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;For this demo, I am going to assume that my project depends on the &lt;code&gt;tidyverse&lt;/code&gt; family of libraries, and that I want to install them in one go. (&lt;em&gt;In real life, I actually avoid taking this approach, and instead install each of the tidyverse libraries one by one as I use and need them.&lt;/em&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(renv)
&lt;span style=&#34;color:#75715e&#34;&gt;# initialise renv&lt;/span&gt;
renv&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;init&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will ask me to restart R, after doing which I can start installing packages.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;install.packages&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tidyverse&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;# wait... and wait... for packages to successfully install&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I would next prototype my analysis code, installing as many packages as I need using the normal &lt;code&gt;install.packages()&lt;/code&gt; syntax - and eventually wrap the analysis up into a script.&lt;/p&gt;
&lt;p&gt;After you have installed all of the libraries you need, in the interactive R session, exectute the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# this will tell you whether renv has captured versions &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# of all of the packages you need to install&lt;/span&gt;
renv&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;status&lt;/span&gt;()
&lt;span style=&#34;color:#75715e&#34;&gt;# if the result of renv::status() was not &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#34;The project is already synchronized with the lockfile.&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# run the below command to snapshot all currently installed libraries&lt;/span&gt;
renv&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;snapshot&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For this demo, I&amp;rsquo;m going to assume I want to run the following command that uses the built-in &lt;code&gt;gss_cat&lt;/code&gt; dataset from the &lt;code&gt;forcats&lt;/code&gt; package, the pipe and the &lt;code&gt;dplyr::filter()&lt;/code&gt; command - so nicely tests a few of the &lt;code&gt;tidyverse&lt;/code&gt; libraries in one line:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;gss_cat &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(tvhours &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The output should be:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;# A tibble: 3 √ó 9
   year marital      age race  rincome    partyid     relig     denom    tvhours
  &amp;lt;int&amp;gt; &amp;lt;fct&amp;gt;      &amp;lt;int&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt;      &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;     &amp;lt;fct&amp;gt;      &amp;lt;int&amp;gt;
1  2000 Widowed       67 White Not appli‚Ä¶ Independent Protesta‚Ä¶ No deno‚Ä¶       2
2  2000 Never mar‚Ä¶    39 White Not appli‚Ä¶ Ind,near r‚Ä¶ Orthodox‚Ä¶ Not app‚Ä¶       4
3  2000 Divorced      25 White Not appli‚Ä¶ Not str de‚Ä¶ None      Not app‚Ä¶       1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;optional-step-3a-look-at-the-renvlock-file-to-see-all-of-the-packages-you-have-installed-into-the-project&#34;&gt;(Optional) Step 3a: Look at the &lt;code&gt;renv.lock&lt;/code&gt; file to see all of the packages you have installed into the project&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;renv.lock&lt;/code&gt; file stores details about the R version and all of the packages that are installed in your environment in &lt;code&gt;.json&lt;/code&gt; format. So installing the &lt;code&gt;tidyverse&lt;/code&gt; packages in one fell swoop like I did above results in quite a long list of libraries (last 5 shown here):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vroom&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Package&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vroom&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.5.3&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Source&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Repository&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Repository&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CRAN&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Hash&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aac6012f34348b3ca6bf373fe7172b06&amp;#34;&lt;/span&gt;
    }&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;withr&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Package&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;withr&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2.4.2&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Source&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Repository&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Repository&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CRAN&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Hash&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ad03909b44677f930fa156d47d7a3aeb&amp;#34;&lt;/span&gt;
    }&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xfun&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Package&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xfun&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.24&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Source&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Repository&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Repository&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CRAN&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Hash&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;88cdb9779a657ad80ad942245fffba31&amp;#34;&lt;/span&gt;
    }&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xml2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Package&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xml2&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.3.2&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Source&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Repository&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Repository&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CRAN&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Hash&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;d4d71a75dd3ea9eb5fa28cc21f9585e2&amp;#34;&lt;/span&gt;
    }&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yaml&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Package&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yaml&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2.2.1&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Source&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Repository&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Repository&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CRAN&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Hash&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2826c5d9efb0a88f657c7a679c7106db&amp;#34;&lt;/span&gt;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I sometimes find that &lt;code&gt;renv::status()&lt;/code&gt; and &lt;code&gt;renv::snapshot()&lt;/code&gt; in step 3 don&amp;rsquo;t immediately see all of the libraries I have installed in the environment, and - weirdly - I need to restart R and run &lt;code&gt;renv::status()&lt;/code&gt; again before it will detect that a bunch of libraries have been installed. So if you&amp;rsquo;re missing libraries in the &lt;code&gt;renv.lock&lt;/code&gt; file you know need to be there - restarting R and re-running &lt;code&gt;renv::status()&lt;/code&gt; and &lt;code&gt;renv::snapshot()&lt;/code&gt; may be the way to go.&lt;/p&gt;
&lt;h3 id=&#34;step-4-save-your-script-and-submit-it-via-pbs&#34;&gt;Step 4: Save your script and submit it via PBS&lt;/h3&gt;
&lt;p&gt;Wrap the above code into &lt;code&gt;myscript.R&lt;/code&gt; , with the following contents:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)
gss_cat &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(tvhours &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then create a shell script (&lt;code&gt;myshellscript.sh&lt;/code&gt;) that can be submitted to the PBS queue:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#! /bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;module purge
module load R/4.0.4
cd /to/my/projectpath
Rscript myscript.R
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, submit to the queue:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;qsub -l walltime&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0:10:0 -l &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1:ncpus&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1:mem&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1gb -N mytestscript myshellscript.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that I&amp;rsquo;m only asking for 1 Gb of RAM and 10 minutes of walltime. This is probably a lot less than you&amp;rsquo;d need for any &amp;ldquo;real&amp;rdquo; analysis - but it&amp;rsquo;s perfectly fine for my script above.&lt;/p&gt;
&lt;p&gt;After that executes, I get the following output in &lt;code&gt;mytestscript.o123456&lt;/code&gt;, where 123456 is the job number that my PBS scheduler automatically assigned to my script run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# A tibble: 3 √ó 9&lt;/span&gt;
   year marital      age race  rincome    partyid     relig     denom    tvhours
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;int&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;fct&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;int&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;fct&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;fct&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;fct&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;fct&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;fct&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;int&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt; Widowed       &lt;span style=&#34;color:#ae81ff&#34;&gt;67&lt;/span&gt; White Not appli‚Ä¶ Independent Protesta‚Ä¶ No deno‚Ä¶       &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt; Never mar‚Ä¶    &lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt; White Not appli‚Ä¶ Ind,near r‚Ä¶ Orthodox‚Ä¶ Not app‚Ä¶       &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt; Divorced      &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; White Not appli‚Ä¶ Not str de‚Ä¶ None      Not app‚Ä¶       &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And the package loading messages in &lt;code&gt;mytestscript.e123456&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;Warning message&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
renv took longer than &lt;span style=&#34;color:#a6e22e&#34;&gt;expected &lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt; seconds) to activate the sandbox.

The sandbox can be disabled by setting&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;

    RENV_CONFIG_SANDBOX_ENABLED &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;

within an appropriate start&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;up .Renviron file. See `?renv::config` for more details.
Warning&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; program compiled against libxml &lt;span style=&#34;color:#ae81ff&#34;&gt;209&lt;/span&gt; using older &lt;span style=&#34;color:#ae81ff&#34;&gt;207&lt;/span&gt;
‚îÄ‚îÄ Attaching packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse &lt;span style=&#34;color:#ae81ff&#34;&gt;1.3.1&lt;/span&gt; ‚îÄ‚îÄ
‚úî ggplot2 &lt;span style=&#34;color:#ae81ff&#34;&gt;3.3.5&lt;/span&gt;     ‚úî purrr   &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3.4&lt;/span&gt;
‚úî tibble  &lt;span style=&#34;color:#ae81ff&#34;&gt;3.1.3&lt;/span&gt;     ‚úî dplyr   &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0.7&lt;/span&gt;
‚úî tidyr   &lt;span style=&#34;color:#ae81ff&#34;&gt;1.1.3&lt;/span&gt;     ‚úî stringr &lt;span style=&#34;color:#ae81ff&#34;&gt;1.4.0&lt;/span&gt;
‚úî readr   &lt;span style=&#34;color:#ae81ff&#34;&gt;2.0.0&lt;/span&gt;     ‚úî forcats &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5.1&lt;/span&gt;
‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ &lt;span style=&#34;color:#a6e22e&#34;&gt;tidyverse_conflicts&lt;/span&gt;() ‚îÄ‚îÄ
‚úñ dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;() masks stats&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;()
‚úñ dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lag&lt;/span&gt;()    masks stats&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This includes a warning that the &lt;code&gt;renv&lt;/code&gt; sandbox took a while to load, but this doesn&amp;rsquo;t seem to affect functionality, so I haven&amp;rsquo;t disabled it.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;That&amp;rsquo;s it! Hopefully the above helps you use &lt;code&gt;renv()&lt;/code&gt; with a PBS-Pro based HPC cluster üòä, and please do leave a comment if something isn&amp;rsquo;t clear or doesn&amp;rsquo;t work as expected.&lt;/p&gt;
&lt;h3 id=&#34;even-more-notes&#34;&gt;(Even more) notes&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;This workflow means that your package install information (i.e. the binaries) are stored in the project folder, in the &lt;code&gt;renv&lt;/code&gt; folder. So they are &lt;em&gt;not&lt;/em&gt; stored on the worker nodes where your job is being executed, but instead in your home or project folder. This is a &lt;em&gt;good&lt;/em&gt; thing, as it means you&amp;rsquo;re not hitting up CRAN to install packages every time you run a job.&lt;/li&gt;
&lt;li&gt;This workflow also means that while you can &lt;code&gt;rsync&lt;/code&gt; your project folder from your local machine to the remove server (or prototype on your local machine), you will need to run &lt;code&gt;renv::restrore()&lt;/code&gt; once on the &amp;ldquo;other&amp;rdquo; machine prior to being able to execute or deploy the script.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Setting up Jupyterhub on AWS as teaching backup</title>
      <link>https://daryavanichkina.com/drafts/2021-04-26-tljhaws/</link>
      <pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://daryavanichkina.com/drafts/2021-04-26-tljhaws/</guid>
      <description>&lt;h2 id=&#34;instructor-instructions---setting-up-jupyterhub-on-aws&#34;&gt;Instructor instructions - setting up Jupyterhub on AWS&lt;/h2&gt;
&lt;p&gt;This is an opinionated step-by-step guide to setting up a very insecure instance of Jupyterhub on AWS.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../TODO/2104tljh2.png&#34; alt=&#34;picture alt&#34;&gt;&lt;/p&gt;
&lt;p&gt;The use case has been a long-standing dream of mine:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If (when) learners&#39; installations fail in the middle of a training session that uses the Jupyter notebook and Python (especially if it&amp;rsquo;s a custom environment AND you&amp;rsquo;re teaching online) you can immediately direct them to an interface that looks very similar to what they have been working on locally and they can continue as if nothing happened.&lt;/li&gt;
&lt;li&gt;Then, in the next break or after the session, you can work with them one-by-one to fix their local installations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The instructions below guide you in:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Setting up a (very insecure, but also very easy to set up/use) instance of &lt;a href=&#34;https://tljh.jupyter.org&#34;&gt;The Littlest Jupyter Hub&lt;/a&gt; on AWS&lt;/li&gt;
&lt;li&gt;Uploading some data and jupyter notebooks that your students can see/use&lt;/li&gt;
&lt;li&gt;Configuring the same environment from a conda &lt;code&gt;environment.yml&lt;/code&gt; file for all of your students.&lt;/li&gt;
&lt;li&gt;(A hacky) way of monitoring memory usage, so you can get a sense of what kind of a machine you&amp;rsquo;ll need in class.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;They also describe a few gotchas.&lt;/p&gt;
&lt;p&gt;The first steps are adapted from &lt;a href=&#34;https://tljh.jupyter.org/en/latest/install/amazon.html&#34;&gt;TLJH instuctions&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;get-an-ec2-instance&#34;&gt;Get an EC2 instance&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Select a &lt;strong&gt;Ubuntu Server 18.04 LTS (HVM), SSD Volume Type - ami-&lt;/strong&gt; instance (the one maintained by Canonical as per the TLJH screenshots in the documentation)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choose a &lt;strong&gt;t3.small&lt;/strong&gt; node type for testing - it&amp;rsquo;s the smallest that supports TLJH. Note that this does not have a free tier, but running it for a few hours costs approximately $0.10 in my experience.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;In theory, you are meant to be able to use a custom command to install TLJH in one go, and paste it into the user script box. Unfortunately, none of the flags have worked for me, and the installation script itself sometimes works and sometimes doesn&amp;rsquo;t - so I recommend doing this over the ssh after the instance has been created.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# you can use this script if you want&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# I describe a more reliable alternative below&lt;/span&gt;
curl -L https://tljh.jupyter.org/bootstrap.py &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  | sudo python3 - &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --admin myusername --show-progress-page --plugin tljh-repo2docker &lt;span style=&#34;color:#75715e&#34;&gt;# can also in theory use a requirements.txt file here&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;When selecting storage, request General Purpose SSD (gp2) for most workloads; according to TLJH Provisioned IOPS SSD (io1) is the highest-performant when performance is critical. I have only used gp2 so far.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[Only the first time you set up] After downloading the AWS &lt;code&gt;.pem&lt;/code&gt; file, make sure to &lt;code&gt;chmod 600&lt;/code&gt; it as otherwise you get a permissions error.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt; ~/Desktop/mypemkey.pem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;installing-tljh&#34;&gt;Installing TLJH&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;ssh&lt;/code&gt; into the server via the Public IPv4 DNS provided in the instance details. &lt;code&gt;ubuntu&lt;/code&gt; is the admin username for the root ubuntu user, and you&amp;rsquo;ll need root privileges for the below&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;ssh -i ~/Desktop/mypemkey.pem ubuntu@ec2-18-220-114-100.us-east-2.compute.amazonaws.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../images/image-20210423141931861.png&#34; alt=&#34;image-20210423141931861&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Install TLJH using the following command:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;curl -L https://tljh.jupyter.org/bootstrap.py &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  | sudo python3 - &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --admin myusername &lt;span style=&#34;color:#75715e&#34;&gt;#--user-requirements-txt-url https://raw.githubusercontent.com/data-8/materials-sp18/master/requirements.txt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;getting-the-data-and-notebooks---do-this-before-creating-users-or-logging-in-as-the-admin-user&#34;&gt;Getting the data and notebooks - do this BEFORE creating users or logging in as the admin user&lt;/h2&gt;
&lt;p&gt;Create a folder:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sudo mkdir -p /srv/
&lt;span style=&#34;color:#75715e&#34;&gt;# you may need to chmod it but I can&amp;#39;t figure out the optimal permissions&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# sudo chmod 777 data&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;option-1&#34;&gt;Option 1:&lt;/h3&gt;
&lt;p&gt;Open a terminal on your &lt;strong&gt;local machine&lt;/strong&gt;, navigate to the directory where you have your data and any notebooks you want to share with your learners/students, and upload the data to the AWS machine with the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sudo scp -r -i ~/Desktop/mypemkey.pem * ubuntu@ec2-3-141-195-91.us-east-2.compute.amazonaws.com:/srv/data/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;option-2&#34;&gt;Option 2:&lt;/h3&gt;
&lt;p&gt;I recommend using a public folder hosted on something like Dropbox or Google Drive. I used Cloudstor when I did this recently.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cd /srv/
sudo wget https://cloudstor.aarnet.edu.au/plus/s/myurllink/download
sudo apt-get install -y unzip
sudo unzip download
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then create a soft link to the data directory with the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sudo ln -s /srv/myproject/data /etc/skel/data
sudo ln -s /srv/myproject/notebooks /etc/skel/notebooks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The notebooks and data should now be visible for any new user created.&lt;/p&gt;
&lt;p&gt;This is adapted from &lt;a href=&#34;https://tljh.jupyter.org/en/latest/howto/content/share-data.html#howto-content-share-data&#34;&gt;these instructions&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;getting-the-right-python-packages-to-work&#34;&gt;Getting the right python packages to work&lt;/h2&gt;
&lt;p&gt;We use the Anaconda package manager for our training, and share installation instructions using a conda &lt;code&gt;environment.yml&lt;/code&gt; file. If you instead have a pip requirements.txt file, you could have used the &lt;code&gt;--user-requirements-txt-url&lt;/code&gt; flag at the end of the TLJH install above to install all of the packages in one go.&lt;/p&gt;
&lt;p&gt;To install from an Anaconda Environment file the easiest way is to modify the base conda environment for all users:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;export PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/opt/tljh/user/bin:&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PATH&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
sudo -E conda env update -n base -f /srv/myproject/environment.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is adapted from &lt;a href=&#34;https://tljh.jupyter.org/en/latest/install/amazon.html#step-3-install-conda-pip-packages-for-all-users&#34;&gt;these instructions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At this point, I&amp;rsquo;d execute all of the notebooks and assess their performance. While Amazon does offer the &lt;a href=&#34;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Install-CloudWatch-Agent.html&#34;&gt;CloudWatch Agent&lt;/a&gt; to collect metrics, I wanted a simpler solution that wasn&amp;rsquo;t quite as overwhelming to configure (IAM roles + wizards + &amp;hellip;), and I knew that the key issues I expected my notebooks to have were memory limits. So I used the script below (running in the terminal in which I had ssh&amp;rsquo;ed to the instance) to gather memory usage information every 0.1 second of my notebooks executing, with the script running for up to an hour. I actually executed each of a series of notebooks, then renamed the quote file at the end of a notebook to &lt;code&gt;notebookX.txt&lt;/code&gt; and repeated the script before executing the next notebook.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;seq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; 36000&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
  echo &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat /proc/meminfo | grep Active: | sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/Active: //g&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; &amp;gt;&amp;gt; usage.txt
  sleep 0.1s
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# kill the script after running a notebook&lt;/span&gt;
mv usage.txt notebook1.txt
&lt;span style=&#34;color:#75715e&#34;&gt;# run command again; run notebook2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A bit hacky, but it works!&lt;/p&gt;
&lt;h2 id=&#34;adding-users&#34;&gt;Adding users&lt;/h2&gt;
&lt;p&gt;The easiest way to add users is to log in via the Jupyterhub web interface as an admin user. To do this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Launch the Jupyterhub by following the Public IPv4 address indicated for the EC2 instance, changing the &lt;code&gt;https:&lt;/code&gt; at the beginning of the url to &lt;code&gt;http:&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ignoring the &amp;ldquo;unsecurity&amp;rdquo;&amp;quot; warnings, log in using the administrator login you configured when you ran the tljh installation command (&lt;code&gt;myusername&lt;/code&gt; in my example above) and a random password (make sure to write this down) to see the Jupyterhub.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to the &lt;code&gt;Control Panel -&amp;gt; Admin&lt;/code&gt; interface and click the &lt;code&gt;Add Users&lt;/code&gt; button.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Manually paste in a list of user names you&amp;rsquo;d like into the box.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is based on &lt;a href=&#34;https://tljh.jupyter.org/en/latest/install/amazon.html#step-2-adding-more-users&#34;&gt;these instructions&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;in-class-notessome-limitations&#34;&gt;In-class notes/some limitations&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make sure to encourage your users to write down the passwords they set when they log into their Jupyterhub instance for the first time - they will need these to login again the next session of your course.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The notebooks and data will be visible to all users when they log in, BUT they will not be able to save changes/make edits to them (as the directory is read-only). To get around this, your users should save a copy of the notebook in their &amp;ldquo;root&amp;rdquo; directory, using the &lt;code&gt;Save notebook&lt;/code&gt; button (NOT the &lt;code&gt;Make a copy&lt;/code&gt; option - this will fail as a result of not having the right permissions).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;../../images/2104_tljh1.png&#34; alt=&#34;picture alt&#34;&gt;&lt;/p&gt;
&lt;p&gt;This in turn may mean that the relative paths you were using in your scripts (assuming &lt;code&gt;./notebooks/&lt;/code&gt; and &lt;code&gt;./data&lt;/code&gt; in the root of the folder) may no longer work, and you may need to help your students get around this.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re writing any output/generating any figures to disk, your students will need to run the following in a cell to avoid errors (where USERNAME is the username they used to log in):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chdir(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/jupyter-USERNAME/&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;extensions-and-improvements&#34;&gt;Extensions and improvements&lt;/h2&gt;
&lt;p&gt;The above requires you to use one LARGE EC2 instance in class to host all of your learners on a single machine. There are risks with running out of resources!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you would like each learner to use their own machine instead, you can use &lt;a href=&#34;https://z2jh.jupyter.org/en/stable/&#34;&gt;Zero to JupyterHub with Kubernetes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you would like to use a docker environment to provision everything instead, you can use &lt;a href=&#34;https://github.com/jupyterhub/repo2docker&#34;&gt;repo2docker&lt;/a&gt; with the above setup (or see next bullet).&lt;/li&gt;
&lt;li&gt;If you would like to use a docker enviroment and are comfortable using an Ansible Playbook to have a much more secure, customised and overall more complex environment - the &lt;a href=&#34;https://docs.plasmabio.org/en/latest/index.html&#34;&gt;Plasma&lt;/a&gt; project  is definitely the way to go.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;I hope this post has been useful for you - please ask questions in the comments, or let me know if you&amp;rsquo;ve used this in your own teaching!&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ggplot batch variable visualisation in Rmd without for loops</title>
      <link>https://daryavanichkina.com/posts/2021-04-12-mappingggplot2/</link>
      <pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://daryavanichkina.com/posts/2021-04-12-mappingggplot2/</guid>
      <description>&lt;p&gt;When working with data, often you want to make a specific type of plot across a bunch of variables at once. The R/tidyverse way of doing this involves some (basic) non-standard evaluation, but - because I know I&amp;rsquo;ll forget how to do this in the future - I thought I&amp;rsquo;d write up this short blog post with code that works.&lt;/p&gt;
&lt;p&gt;In the below snippet, we use ggplot on the built-in mtcars dataset to make a scatterplot of each of the variables against the &lt;code&gt;mpg&lt;/code&gt; variable, colouring it by the number of cylinders (on the fly converted to a factor).&lt;/p&gt;
&lt;p&gt;To do this, I define the &lt;code&gt;makeplots()&lt;/code&gt; function, which takes a single argument called &lt;code&gt;myfeature&lt;/code&gt;. Within the function, I need to save the plot as a variable (&lt;code&gt;a&lt;/code&gt;), and then print it so that it is rendered in the Rmd. I grab the column names I&amp;rsquo;d like to iterate over and save them into a character vector (In real life, I tend do grab them all using &lt;code&gt;names(mtcars)&lt;/code&gt;, but I choose a few manually to keep this blog post manageable. Also, I could have used commands like &lt;code&gt;setdiff()&lt;/code&gt; to subset the &lt;code&gt;names(mtcars)&lt;/code&gt; character vector to remove, for example, mpg itself).&lt;/p&gt;
&lt;p&gt;I also use the &lt;code&gt;as_label(quo(.))&lt;/code&gt; functions to extract the string of the variable name itself, so I can use it to set the title of the plot.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(purrr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggplot2)
makeplots &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(myfeature){
  a &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; mtcars &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!!&lt;/span&gt;myfeature, mpg, cyl) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!!&lt;/span&gt;myfeature, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mpg, colour &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.factor&lt;/span&gt;(cyl))) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_point&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste0&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;as_label&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;quo&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!!&lt;/span&gt;myfeature)), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; vs mpg&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_classic&lt;/span&gt;()
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(a)
}

&lt;span style=&#34;color:#75715e&#34;&gt;# to get all of the column names&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# mycolnames &amp;lt;- names(mtcars)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# I&amp;#39;m using a shorter vector in the interests of not overwhelming this blog post with ALL the images&lt;/span&gt;
mycolnames &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;disp&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hp&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;drat&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;walk&lt;/span&gt;(mycolnames, &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;makeplots&lt;/span&gt;(myfeature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sym&lt;/span&gt;(.x))) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../images/2104_disp.png&#34; alt=&#34;Disp&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/2104_hp.png&#34; alt=&#34;HP&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/2104_drat.png&#34; alt=&#34;Drat&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Avoiding 443 errors &amp; RCurl woes with the REDCap API on Windows</title>
      <link>https://daryavanichkina.com/posts/2021-04-09-redcap-api-crossplatform/</link>
      <pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://daryavanichkina.com/posts/2021-04-09-redcap-api-crossplatform/</guid>
      <description>&lt;p&gt;Like many other educational and research institutions, the University of Sydney (where I currently work) supports the use of REDCap as a survey platform. I also use it, in part because one of the most attractive features of the REDCap API over other survey tools like Qualtrics, Google Forms and SurveyMonkey is the fact that the API playground supports GUI-style selection of what you want, with REDCap providing template code in a wide variety of languages.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/2104_what2exportREDCap.png&#34; alt=&#34;What to export&#34;&gt;&lt;/p&gt;
&lt;p&gt;Languages include PHP, Perl, Python, R, Ruby, Java &amp;amp; UNIX&amp;rsquo;s curl, and output format options include json, csv and XML.&lt;/p&gt;
&lt;p&gt;Further, when you request to export Records, it will nicely provide you with even more options that allow you to point and click to get the actual, real data you want, without needing to delve into the joys of XPATHs and XML.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/2104_RecordsExport.png&#34; alt=&#34;Records export&#34;&gt;&lt;/p&gt;
&lt;p&gt;Under the hood, this is a POST form, and REDCap will explicitly show you what data you&amp;rsquo;ve submitted in the &amp;ldquo;Raw request parameters&amp;rdquo; tab.&lt;/p&gt;
&lt;p&gt;It will also provide you with the code you&amp;rsquo;d use to get the same data programmatically. There&amp;rsquo;s also a &amp;ldquo;Click the Execute Request button to execute a real API request, and it will display the API response in a text box below.&amp;rdquo; so you can preview what you&amp;rsquo;d get back as an object when loading this into your programming language of choice.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/2104_PostForm.png&#34; alt=&#34;Post form&#34;&gt;&lt;/p&gt;
&lt;p&gt;As an example, when I try to retrieve the records from our feedback form (which I&amp;rsquo;ve called &lt;code&gt;myformname&lt;/code&gt; in the images/code above), it suggests the following R code for me (this returns the records themselves in a csv, and the errors in json):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env Rscript&lt;/span&gt;
apisecret &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;myapikey&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# you get this when you enable REDCap API access for your project&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(RCurl)
result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;postForm&lt;/span&gt;(
    uri&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://redcap.sydney.edu.au/api/&amp;#39;&lt;/span&gt;,
    token&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;apisecret,
    content&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;record&amp;#39;&lt;/span&gt;,
    format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;csv&amp;#39;&lt;/span&gt;,
    type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;flat&amp;#39;&lt;/span&gt;,
    csvDelimiter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;forms[0]&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;myformname&amp;#39;&lt;/span&gt;,
    rawOrLabel&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;raw&amp;#39;&lt;/span&gt;,
    rawOrLabelHeaders&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;raw&amp;#39;&lt;/span&gt;,
    exportCheckboxLabel&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;false&amp;#39;&lt;/span&gt;,
    exportSurveyFields&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;,
    exportDataAccessGroups&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;false&amp;#39;&lt;/span&gt;,
    returnFormat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;
)
&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(result)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And all is well and good &amp;hellip; if you&amp;rsquo;re on a Mac! However, when I recently tried to run this (fully working!) code on a Windows machine (since this particular survey data goes into a PowerBI dashboard I&amp;rsquo;ve built) - I encountered a 443 error instead! Apparently, this is a &lt;a href=&#34;https://github.com/dewittpe/REDCapExporter/issues/16&#34;&gt;known issue&lt;/a&gt;, but while it&amp;rsquo;s suggested to use the &lt;code&gt;httr&lt;/code&gt; package instead (or one of the dedicated REDCap R packages), there was no template code available.&lt;/p&gt;
&lt;p&gt;After a bit of exploration, the below ended up working, and I&amp;rsquo;m sharing this template code in the hopes of saving others (at Sydney Uni and elsewhere) the hassle of having to figure this out:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env Rscript&lt;/span&gt;
apisecret &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;myapikey&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# you get this when you enable REDCap API access for your project&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(curl)
h1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;new_handle&lt;/span&gt;()
&lt;span style=&#34;color:#a6e22e&#34;&gt;handle_setform&lt;/span&gt;(h1,
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;token&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; apisecret,
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;content&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;record&amp;#34;&lt;/span&gt;, 
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;format&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;csv&amp;#34;&lt;/span&gt;,
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;flat&amp;#39;&lt;/span&gt;,
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;csvDelimiter&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;,
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;forms[0]&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;myformname&amp;#39;&lt;/span&gt;,
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rawOrLabel&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;raw&amp;#39;&lt;/span&gt;,
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rawOrLabelHeaders&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;raw&amp;#39;&lt;/span&gt;,
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;exportCheckboxLabel&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;false&amp;#39;&lt;/span&gt;,
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;exportSurveyFields&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;,
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;exportDataAccessGroups&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;false&amp;#39;&lt;/span&gt;,
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;returnFormat&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;)

surveyresults &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read.csv&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rawToChar&lt;/span&gt;(
  &lt;span style=&#34;color:#a6e22e&#34;&gt;curl_fetch_memory&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://redcap.sydney.edu.au/api/&amp;#34;&lt;/span&gt;, handle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; h1)&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;content),
  na.strings &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
  )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, the &lt;code&gt;curl::handle_setform()&lt;/code&gt; command looks pretty similar to the &lt;code&gt;RCurl::postForm()&lt;/code&gt; request, but it needs to be combined with the &lt;code&gt;curl::curl_fetch_memory()&lt;/code&gt; command&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, which has a few quirks:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It returns the actual data in the &lt;code&gt;content&lt;/code&gt; attribute, and not the data frame directly - hence the need for the &lt;code&gt;$content&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;It returns the data in raw format (and, no, setting the &lt;code&gt;rawOrLabel&lt;/code&gt; to label does not solve this), so you need to pass it into &lt;code&gt;base::rawToChar()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read.csv&lt;/code&gt;&amp;rsquo;s defaults are to accept a filepath, so we use an arguement called &lt;code&gt;text&lt;/code&gt; to specify that we&amp;rsquo;re straight feeding in the actual data in instead.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The other useful thing to &amp;ldquo;grab&amp;rdquo; when working with data tends to be the data dictionary, for which the code looks quite similar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env Rscript&lt;/span&gt;
apisecret &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;myapikey&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# you get this when you enable REDCap API access for your project&lt;/span&gt;
h2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;new_handle&lt;/span&gt;()
&lt;span style=&#34;color:#a6e22e&#34;&gt;handle_setform&lt;/span&gt;(h2,
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;token&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; apisecret,
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;content&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;metadata&amp;#34;&lt;/span&gt;, 
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;format&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;csv&amp;#34;&lt;/span&gt;,
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;forms[0]&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;myformname&amp;#39;&lt;/span&gt;,
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;returnFormat&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;csv&amp;#39;&lt;/span&gt;)


datadict &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read.csv&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rawToChar&lt;/span&gt;(
  &lt;span style=&#34;color:#a6e22e&#34;&gt;curl_fetch_memory&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://redcap.sydney.edu.au/api/&amp;#34;&lt;/span&gt;, handle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; h2)&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;content)
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I hope this is helpful for others who use REDCap on Windows, or who need to write code that works across all of the major operating system platforms!&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Yes, we could have used the &lt;code&gt;curl::curl_fetch_disk()&lt;/code&gt; command to download the file to disk, which seems to work a lot better and actually save the file as a non-binary .csv file. However, for this particular project, I&amp;rsquo;m doing a lot of data cleaning &lt;em&gt;before&lt;/em&gt; I write the output to disk, and I&amp;rsquo;d rather not store two copies of the same scrape. &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>Living dangerously: a newbie guide to running multiple version of R on a Mac</title>
      <link>https://daryavanichkina.com/posts/2020-rswitch-guide/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://daryavanichkina.com/posts/2020-rswitch-guide/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://unsplash.com/photos/3uunq0n1WRY&#34; alt=&#34;TBH I want to be this chicken&amp;hellip;&#34;&gt;&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;d have to be living under a rock in the R community to not be aware of the fact that R 4.0 has been released, with some major changes, the biggest of which is probably the new default for &lt;code&gt;read.table()&lt;/code&gt;: &lt;code&gt;stringsAsFactors = FALSE&lt;/code&gt;, as well as the fact that &lt;code&gt;matrix()&lt;/code&gt; now converts character columns to factors and factors to integers.&lt;/p&gt;
&lt;p&gt;In the past, I&amp;rsquo;ve always been too &amp;ldquo;chicken&amp;rdquo; to try running multiple versions of R on my work laptop, as I&amp;rsquo;ve usually got a few key analysis projects going that need to be delivered on time and within full feature scope - which means I don&amp;rsquo;t have time to fix basic version incompatibility bugs. But with this major new release I was sorely tempted, so have gone down the rabbit-hole of installing &lt;a href=&#34;https://rud.is/rswitch/guide/&#34;&gt;RSwitch&lt;/a&gt; and R4.0 on my Mac (Catalina 10.15.4). Below I document, in what is probably excruciating detail, the steps of how I got this to work. I&amp;rsquo;ve played with it for all of two days, and it seems to work - so I&amp;rsquo;ve written this post in the hopes of helping others. Also, I had some funky hiccups with getting the right filepath and not using sudo at the outset, so I&amp;rsquo;m hoping this helps someone avoid some extra &lt;code&gt;rm -r ...path...&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;step-0-critical-close-r--rstudio&#34;&gt;Step 0 (CRITICAL): Close R &amp;amp; RStudio&lt;/h2&gt;
&lt;p&gt;Make sure you have closed R and RStudio prior to embarking on the below. Updating R versions mid-analysis can have &amp;hellip; unintended consequences.&lt;/p&gt;
&lt;h2 id=&#34;step-1-download-rswitch-and-install-it&#34;&gt;Step 1: Download RSwitch and install it&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://rud.is/rswitch/&#34;&gt;Download RSwitch&lt;/a&gt; and install it. Go through all of the hoops of getting it approved by MacOS and able to be run by accepting the risks of running software from an unidentified developer. (Eventually) End up with a nice switch icon in your menubar.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;step-2-get-new-r&#34;&gt;Step 2: Get new R&lt;/h2&gt;
&lt;p&gt;[As usual] There is more than one way to get a new version of R onto your machine.&lt;/p&gt;
&lt;h4 id=&#34;option-1-gui-imho-riskier&#34;&gt;Option 1: GUI (IMHO riskier)&lt;/h4&gt;
&lt;p&gt;Download the graphical installer &lt;code&gt;R-4.0.0.pkg&lt;/code&gt;, which is the top link when on &lt;a href=&#34;https://cran.r-project.org/&#34;&gt;CRAN&lt;/a&gt; you click on &amp;ldquo;Download R for (Mac) OS X&amp;rdquo;. This is NOT the approach I took, because if done wrong this approach can remove your existing R installation, but I will describe how in theory I think it&amp;rsquo;s meant to be used below.&lt;/p&gt;
&lt;h4 id=&#34;option-2-pre-built-copy-the-approach-i-took&#34;&gt;Option 2: Pre-built copy (the approach I took)&lt;/h4&gt;
&lt;p&gt;Download a pre-built &lt;code&gt;.tar.gz&lt;/code&gt; copy of the R framework from the &lt;a href=&#34;https://mac.r-project.org/&#34;&gt;developer page&lt;/a&gt;. In my case, I downloaded the latest stable branch &lt;code&gt;R-4.0-branch.tar.gz (72 Mb)&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/200501_RBuilds.png&#34; alt=&#34;Which R?&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;step-3-apply-funky-magic&#34;&gt;Step 3: Apply funky magic&lt;/h2&gt;
&lt;h4 id=&#34;option-1-gui&#34;&gt;Option 1: GUI&lt;/h4&gt;
&lt;p&gt;So the reason I think the GUI is &amp;ldquo;riskier&amp;rdquo; is because usually when you run the GUI for a new version of R, it cleanly removes the old version of R from your machine. The workaround to prevent this from happening is to make your system, and hence the R installer, &amp;ldquo;forget&amp;rdquo; it has R installed. To do this you need to open a Terminal and type the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo pkgutil --forget org.r-project.R.el-capitan.fw.pkg \
             --forget org.r-project.x86_64.tcltk.x11 \
             --forget org.r-project.x86_64.texinfo \
             --forget org.r-project.R.el-capitan.GUI.pkg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For details about &lt;strong&gt;why&lt;/strong&gt; this works see &lt;a href=&#34;https://cran.rstudio.org/doc/manuals/R-admin.html#Multiple-versions&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After that completes successfully (note:  you&amp;rsquo;ll need to enter your password to use sudo) you can run the GUI installer.&lt;/p&gt;
&lt;h4 id=&#34;option-2-command-line&#34;&gt;Option 2: Command line&lt;/h4&gt;
&lt;p&gt;I&amp;rsquo;m fairly comfortable with the command line, so was happy to use that option, but did make a few silly mistakes with the paths, so am documenting what worked below, in the hope that it helps others:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use the Terminal (&lt;code&gt;cd ...&lt;/code&gt;) to navigate to where you&amp;rsquo;ve got the &lt;code&gt;R.***.tar.gz&lt;/code&gt; and record its location, or -if you already know it - just copy the path to it to the clipboard.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Navigate to your root directory: &lt;code&gt;cd /&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;sudo tar -xvzf path_to_R_tar.gz_file&lt;/code&gt;, where &lt;code&gt;path_to_R_tar.gz_file&lt;/code&gt; is the path you saved to the clipboard. After you enter your password, R should be installed and you should have the latest version of R active on your machine.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;step-4-painfully-battle-the-security-stuff&#34;&gt;Step 4: Painfully battle the security stuff&lt;/h2&gt;
&lt;p&gt;Try to open Rstudio. This is probably something that happens only with Option 2 above, but I got a bunch of security warnings from MacOS and had to &amp;ldquo;Allow Anyway&amp;rdquo; a ton (twice) before RStudio was able to load R 4.0.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/200501_Harm2.png&#34; alt=&#34;Harm2&#34;&gt;&lt;/p&gt;
&lt;p&gt;Accept all the things:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/200501_Harm1.png&#34; alt=&#34;Harm1&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;step-5-switch&#34;&gt;Step 5: Switch&lt;/h2&gt;
&lt;p&gt;To go back to having your existing, &amp;ldquo;production&amp;rdquo; version of R active on your machine use RSwitch to select that older version:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/200501_Rswitch.png&#34; alt=&#34;pRSwitch&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I hope this post has been helpful, and let me know in a comment if something isn&amp;rsquo;t working as described or something&amp;rsquo;s not clear. (Probably) next post: updating libraries&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
